name: vehicle-pipeline
on:
  push:
    branches:
      -ci/pipeline
    paths:
      - vehicleRentalManagement/**
      - 'docker-compose.yml'
      - github/workflows/*-backend.yml
jobs:
  compile:
    runs-on: ubuntu
    name: Compile project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: Setup JDK
      - uses: actions/setup-jdk@v4
      - with:
          java-version: 21
          distribution: 'amazoncorretto'
      - name:
        run: |
          ./mvnw clean compile
          

      



  build:
    runs-on: ubuntu
    name: Build project
    needs: [compile]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: Setup JDK
      - uses: actions/setup-jdk@v4
      - with:
          java-version: 21
          distribution: 'amazoncorretto'
      - name:
        run: |
          ./mvnw clean package

  build-image:
    name: Build Docker image
    runs-on: ubuntu
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: Setup JDK
      - uses: actions/setup-jdk@v4
      - with:
          java-version: 21
          distribution: 'amazoncorretto'
      - name: Extract project version
        id: extract_version
        run: |
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
      - name: Login to DockerHub
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64


          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:latest
          build-args: |
              PROFILE=dev
              APP_VERSION=${{ steps.extract_version.outputs.VERSION }}








